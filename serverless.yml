service: gas-price-monitor-tool
frameworkVersion: '2'
useDotenv: true
custom:
  gasPriceBucketName: gas-price-bucket
  subscriptionsTableName: gas-subscriptions
provider:
  name: aws
  runtime: nodejs14.x
  apiGateway:
    shouldStartNameWithService: true
  lambdaHashingVersion: 20201221
  logRetentionInDays: 14
  stage: dev
  region: us-east-1
  apiKeys:
    - key
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 's3:*'
      Resource: '*'
    - Effect: 'Allow'
      Action:
        - 'ses:SendEmail'
      Resource: '*'
    - Effect: 'Allow'
      Action: 'dynamodb:*'
      Resource: '*'

  environment:
    gasPriceBucket: ${self:custom.gasPriceBucketName}
    subscriptionsTableName: ${self:custom.subscriptionsTableName}
    gasPriceDataFile: ${env:gasPriceDataFile}
    gasDataUrl: ${env:gasDataUrl}
    emailSender: ${env:emailSender}

functions:
  MonitorTool:
    handler: src/poller.handler
    events:
      - schedule: rate(6 hours)
  API:
    handler: src/api.handler
    events:
      - http:
          path: /{any+}
          method: ANY
          private: true
          cors: true

resources:
  Resources:
    PriceBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.gasPriceBucketName}
        AccessControl: Private
    SubscriptionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.subscriptionsTableName}
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
